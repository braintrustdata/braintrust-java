// File generated from our OpenAPI spec by Stainless.

package com.braintrustdata.api.models

import com.braintrustdata.api.core.JsonNull
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class FunctionTest {

    @Test
    fun createFunction() {
        val function =
            Function.builder()
                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                ._xactId("_xact_id")
                .functionData(
                    Function.FunctionData.ofPrompt(
                        Function.FunctionData.Prompt.builder()
                            .type(Function.FunctionData.Prompt.Type.PROMPT)
                            .build()
                    )
                )
                .logId(Function.LogId.P)
                .name("name")
                .orgId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                .projectId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                .slug("slug")
                .created(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .description("description")
                .functionSchema(
                    Function.FunctionSchema.builder()
                        .parameters(JsonNull.of())
                        .returns(JsonNull.of())
                        .build()
                )
                .functionType(Function.FunctionType.LLM)
                .metadata(Function.Metadata.builder().build())
                .origin(
                    Function.Origin.builder()
                        .objectId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                        .objectType(Function.Origin.ObjectType.ORGANIZATION)
                        .internal_(true)
                        .build()
                )
                .promptData(
                    PromptData.builder()
                        .options(
                            PromptData.Options.builder()
                                .model("model")
                                .params(
                                    PromptData.Options.Params.ofOpenAIModelParams(
                                        PromptData.Options.Params.OpenAIModelParams.builder()
                                            .frequencyPenalty(42.23)
                                            .functionCall(
                                                PromptData.Options.Params.OpenAIModelParams
                                                    .FunctionCall
                                                    .ofAuto(
                                                        PromptData.Options.Params.OpenAIModelParams
                                                            .FunctionCall
                                                            .Auto
                                                            .AUTO
                                                    )
                                            )
                                            .maxTokens(42.23)
                                            .n(42.23)
                                            .presencePenalty(42.23)
                                            .responseFormat(
                                                PromptData.Options.Params.OpenAIModelParams
                                                    .ResponseFormat
                                                    .ofJsonObject(
                                                        PromptData.Options.Params.OpenAIModelParams
                                                            .ResponseFormat
                                                            .JsonObject
                                                            .builder()
                                                            .type(
                                                                PromptData.Options.Params
                                                                    .OpenAIModelParams
                                                                    .ResponseFormat
                                                                    .JsonObject
                                                                    .Type
                                                                    .JSON_OBJECT
                                                            )
                                                            .build()
                                                    )
                                            )
                                            .stop(listOf("string"))
                                            .temperature(42.23)
                                            .toolChoice(
                                                PromptData.Options.Params.OpenAIModelParams
                                                    .ToolChoice
                                                    .ofAuto(
                                                        PromptData.Options.Params.OpenAIModelParams
                                                            .ToolChoice
                                                            .Auto
                                                            .AUTO
                                                    )
                                            )
                                            .topP(42.23)
                                            .useCache(true)
                                            .build()
                                    )
                                )
                                .position("position")
                                .build()
                        )
                        .origin(
                            PromptData.Origin.builder()
                                .projectId("project_id")
                                .promptId("prompt_id")
                                .promptVersion("prompt_version")
                                .build()
                        )
                        .parser(
                            PromptData.Parser.builder()
                                .choiceScores(PromptData.Parser.ChoiceScores.builder().build())
                                .type(PromptData.Parser.Type.LLM_CLASSIFIER)
                                .useCot(true)
                                .build()
                        )
                        .prompt(
                            PromptData.Prompt.ofCompletion(
                                PromptData.Prompt.Completion.builder()
                                    .content("content")
                                    .type(PromptData.Prompt.Completion.Type.COMPLETION)
                                    .build()
                            )
                        )
                        .toolFunctions(
                            listOf(
                                PromptData.ToolFunction.ofFunction(
                                    PromptData.ToolFunction.Function.builder()
                                        .id("id")
                                        .type(PromptData.ToolFunction.Function.Type.FUNCTION)
                                        .build()
                                )
                            )
                        )
                        .build()
                )
                .tags(listOf("string"))
                .build()
        assertThat(function).isNotNull
        assertThat(function.id()).isEqualTo("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
        assertThat(function._xactId()).isEqualTo("_xact_id")
        assertThat(function.functionData())
            .isEqualTo(
                Function.FunctionData.ofPrompt(
                    Function.FunctionData.Prompt.builder()
                        .type(Function.FunctionData.Prompt.Type.PROMPT)
                        .build()
                )
            )
        assertThat(function.logId()).isEqualTo(Function.LogId.P)
        assertThat(function.name()).isEqualTo("name")
        assertThat(function.orgId()).isEqualTo("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
        assertThat(function.projectId()).isEqualTo("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
        assertThat(function.slug()).isEqualTo("slug")
        assertThat(function.created()).contains(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(function.description()).contains("description")
        assertThat(function.functionSchema())
            .contains(
                Function.FunctionSchema.builder()
                    .parameters(JsonNull.of())
                    .returns(JsonNull.of())
                    .build()
            )
        assertThat(function.functionType()).contains(Function.FunctionType.LLM)
        assertThat(function.metadata()).contains(Function.Metadata.builder().build())
        assertThat(function.origin())
            .contains(
                Function.Origin.builder()
                    .objectId("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .objectType(Function.Origin.ObjectType.ORGANIZATION)
                    .internal_(true)
                    .build()
            )
        assertThat(function.promptData())
            .contains(
                PromptData.builder()
                    .options(
                        PromptData.Options.builder()
                            .model("model")
                            .params(
                                PromptData.Options.Params.ofOpenAIModelParams(
                                    PromptData.Options.Params.OpenAIModelParams.builder()
                                        .frequencyPenalty(42.23)
                                        .functionCall(
                                            PromptData.Options.Params.OpenAIModelParams.FunctionCall
                                                .ofAuto(
                                                    PromptData.Options.Params.OpenAIModelParams
                                                        .FunctionCall
                                                        .Auto
                                                        .AUTO
                                                )
                                        )
                                        .maxTokens(42.23)
                                        .n(42.23)
                                        .presencePenalty(42.23)
                                        .responseFormat(
                                            PromptData.Options.Params.OpenAIModelParams
                                                .ResponseFormat
                                                .ofJsonObject(
                                                    PromptData.Options.Params.OpenAIModelParams
                                                        .ResponseFormat
                                                        .JsonObject
                                                        .builder()
                                                        .type(
                                                            PromptData.Options.Params
                                                                .OpenAIModelParams
                                                                .ResponseFormat
                                                                .JsonObject
                                                                .Type
                                                                .JSON_OBJECT
                                                        )
                                                        .build()
                                                )
                                        )
                                        .stop(listOf("string"))
                                        .temperature(42.23)
                                        .toolChoice(
                                            PromptData.Options.Params.OpenAIModelParams.ToolChoice
                                                .ofAuto(
                                                    PromptData.Options.Params.OpenAIModelParams
                                                        .ToolChoice
                                                        .Auto
                                                        .AUTO
                                                )
                                        )
                                        .topP(42.23)
                                        .useCache(true)
                                        .build()
                                )
                            )
                            .position("position")
                            .build()
                    )
                    .origin(
                        PromptData.Origin.builder()
                            .projectId("project_id")
                            .promptId("prompt_id")
                            .promptVersion("prompt_version")
                            .build()
                    )
                    .parser(
                        PromptData.Parser.builder()
                            .choiceScores(PromptData.Parser.ChoiceScores.builder().build())
                            .type(PromptData.Parser.Type.LLM_CLASSIFIER)
                            .useCot(true)
                            .build()
                    )
                    .prompt(
                        PromptData.Prompt.ofCompletion(
                            PromptData.Prompt.Completion.builder()
                                .content("content")
                                .type(PromptData.Prompt.Completion.Type.COMPLETION)
                                .build()
                        )
                    )
                    .toolFunctions(
                        listOf(
                            PromptData.ToolFunction.ofFunction(
                                PromptData.ToolFunction.Function.builder()
                                    .id("id")
                                    .type(PromptData.ToolFunction.Function.Type.FUNCTION)
                                    .build()
                            )
                        )
                    )
                    .build()
            )
        assertThat(function.tags().get()).containsExactly("string")
    }
}

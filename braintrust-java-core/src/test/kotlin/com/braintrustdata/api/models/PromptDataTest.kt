// File generated from our OpenAPI spec by Stainless.

package com.braintrustdata.api.models

import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class PromptDataTest {

    @Test
    fun createPromptData() {
        val promptData =
            PromptData.builder()
                .options(
                    PromptOptions.builder()
                        .model("model")
                        .params(
                            PromptOptions.Params.ofOpenAIModelParams(
                                PromptOptions.Params.OpenAIModelParams.builder()
                                    .frequencyPenalty(42.23)
                                    .functionCall(
                                        PromptOptions.Params.OpenAIModelParams.FunctionCall.ofAuto(
                                            PromptOptions.Params.OpenAIModelParams.FunctionCall.Auto
                                                .AUTO
                                        )
                                    )
                                    .maxTokens(42.23)
                                    .n(42.23)
                                    .presencePenalty(42.23)
                                    .responseFormat(
                                        PromptOptions.Params.OpenAIModelParams.ResponseFormat
                                            .ofJsonObject(
                                                PromptOptions.Params.OpenAIModelParams
                                                    .ResponseFormat
                                                    .JsonObject
                                                    .builder()
                                                    .type(
                                                        PromptOptions.Params.OpenAIModelParams
                                                            .ResponseFormat
                                                            .JsonObject
                                                            .Type
                                                            .JSON_OBJECT
                                                    )
                                                    .build()
                                            )
                                    )
                                    .stop(listOf("string"))
                                    .temperature(42.23)
                                    .toolChoice(
                                        PromptOptions.Params.OpenAIModelParams.ToolChoice.ofAuto(
                                            PromptOptions.Params.OpenAIModelParams.ToolChoice.Auto
                                                .AUTO
                                        )
                                    )
                                    .topP(42.23)
                                    .useCache(true)
                                    .build()
                            )
                        )
                        .position("position")
                        .build()
                )
                .origin(
                    PromptData.Origin.builder()
                        .projectId("project_id")
                        .promptId("prompt_id")
                        .promptVersion("prompt_version")
                        .build()
                )
                .parser(
                    PromptData.Parser.builder()
                        .choiceScores(PromptData.Parser.ChoiceScores.builder().build())
                        .type(PromptData.Parser.Type.LLM_CLASSIFIER)
                        .useCot(true)
                        .build()
                )
                .prompt(
                    PromptData.Prompt.ofCompletion(
                        PromptData.Prompt.Completion.builder()
                            .content("content")
                            .type(PromptData.Prompt.Completion.Type.COMPLETION)
                            .build()
                    )
                )
                .toolFunctions(
                    listOf(
                        PromptData.ToolFunction.ofFunction(
                            PromptData.ToolFunction.Function.builder()
                                .id("id")
                                .type(PromptData.ToolFunction.Function.Type.FUNCTION)
                                .build()
                        )
                    )
                )
                .build()
        assertThat(promptData).isNotNull
        assertThat(promptData.options())
            .contains(
                PromptOptions.builder()
                    .model("model")
                    .params(
                        PromptOptions.Params.ofOpenAIModelParams(
                            PromptOptions.Params.OpenAIModelParams.builder()
                                .frequencyPenalty(42.23)
                                .functionCall(
                                    PromptOptions.Params.OpenAIModelParams.FunctionCall.ofAuto(
                                        PromptOptions.Params.OpenAIModelParams.FunctionCall.Auto
                                            .AUTO
                                    )
                                )
                                .maxTokens(42.23)
                                .n(42.23)
                                .presencePenalty(42.23)
                                .responseFormat(
                                    PromptOptions.Params.OpenAIModelParams.ResponseFormat
                                        .ofJsonObject(
                                            PromptOptions.Params.OpenAIModelParams.ResponseFormat
                                                .JsonObject
                                                .builder()
                                                .type(
                                                    PromptOptions.Params.OpenAIModelParams
                                                        .ResponseFormat
                                                        .JsonObject
                                                        .Type
                                                        .JSON_OBJECT
                                                )
                                                .build()
                                        )
                                )
                                .stop(listOf("string"))
                                .temperature(42.23)
                                .toolChoice(
                                    PromptOptions.Params.OpenAIModelParams.ToolChoice.ofAuto(
                                        PromptOptions.Params.OpenAIModelParams.ToolChoice.Auto.AUTO
                                    )
                                )
                                .topP(42.23)
                                .useCache(true)
                                .build()
                        )
                    )
                    .position("position")
                    .build()
            )
        assertThat(promptData.origin())
            .contains(
                PromptData.Origin.builder()
                    .projectId("project_id")
                    .promptId("prompt_id")
                    .promptVersion("prompt_version")
                    .build()
            )
        assertThat(promptData.parser())
            .contains(
                PromptData.Parser.builder()
                    .choiceScores(PromptData.Parser.ChoiceScores.builder().build())
                    .type(PromptData.Parser.Type.LLM_CLASSIFIER)
                    .useCot(true)
                    .build()
            )
        assertThat(promptData.prompt())
            .contains(
                PromptData.Prompt.ofCompletion(
                    PromptData.Prompt.Completion.builder()
                        .content("content")
                        .type(PromptData.Prompt.Completion.Type.COMPLETION)
                        .build()
                )
            )
        assertThat(promptData.toolFunctions().get())
            .containsExactly(
                PromptData.ToolFunction.ofFunction(
                    PromptData.ToolFunction.Function.builder()
                        .id("id")
                        .type(PromptData.ToolFunction.Function.Type.FUNCTION)
                        .build()
                )
            )
    }
}
